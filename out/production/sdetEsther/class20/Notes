This Keyword refers to the current class/object/instance

this can be used to access current class instance variables and methods

this() - used with constructor to call current class constructor

Inheritance
What is it? - process when subclass acquires properties and behaviour from the super class

Why do we use it? - for code reusability, readability, eliminate code redundancy

How to implement? - using extends Keyword


class Parent{

}

class Child extends Parent{
}

Inheritance Types:
Single - 1 child 1 parent
Multilevel - Grandparent -> parent ->child
Hierarchical - 1 parent multiple children

Can a child class have multiple parents?
   using Multiple Inheritance - YES
   using class concept - NO



Access Modifiers:
4 types

from less restrictive to the most

Public -> protected -> default -> private

private members (variables and methods) Do not participate in the inheritance

VARIABLES SYNTAX:

OPTIONAL                         OPTIONAL                         MUST         MUST
Access modifiers            Non Access modifier(static)          DataType      Name;


METHODS SYNTAX:

OPTIONAL                         OPTIONAL                        MUST           MUST
Access modifiers            Non Access modifier(static)         ReturnType     Name() {}

super keyword - used to refer to the immediate parent class
    can be used with variables and methods
    can be used with constructors

Flower flower1 =new Flower();

new -> creates an object
Flower(); -> initializes the object (calling a constructor)

flower1 - is a variable(reference variable)
Flower -> Type

     String str=new String();
     str="Hello";

     String str1=new String("hello");































